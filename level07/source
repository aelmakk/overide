#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void clear_stdin(void)
{
  int c;
  
  do {
    c = getchar();
    if ((char)c == '\n') {
      return;
    }
  } while ((char)c != -1);
  return;
}

unsigned int        get_unum()
{
    unsigned int number;

    fflush(stdout);
    scanf("%u", &number);
    clear_stdin ();
    return (number);
}

int             read_number(unsigned int arr[])
{
    unsigned int number;
    unsigned int index ;

    printf(" Index: ");
    index = get_unum();
    // to get to the right index (arr + (index << 2); multiplay the index by 4 , size of uint)
    printf(" Number at data[%u] is %u\n", number, arr[index]); 
    return (0);
}

int             store_number(unsigned int arr[])
{
    unsigned int index;
    unsigned int number;

    number = 0;
    index = 0;
    printf(" Number: ");
    number = get_unum();
    printf(" Index: ");
    index = get_unum();
    //doing some weird shit to test if index is devisable by 3.
    if (index % 3 == 0 || number >> 0x18 == 183)
    {
        puts(" *** ERROR! ***");
        puts("   This index is reserved for wil!");
        puts(" *** ERROR! ***");
        return (1);
    }
    else 
        arr[index] = number;
    return (0); 
}

int     main(int argc, char **argv, char **envp)
{
    int               status;
    char              command[20];
    unsigned int      arr[100];
    char              *tmp;
    
    // tmp = av[0];
    bzero(arr, sizeof(int) * 0x64);
    tmp = *argv;
    while (tmp)
    {
        memset(tmp, '\0', strlen(tmp));   
        tmp++; 
    }
    tmp = *envp;            // environment variable pointer
    {
        memset(tmp, '\0', strlen(tmp)); 
        tmp++; 
    }
    puts("----------------------------------------------------\n  Welcome to wil\'s crappy number storage service!\n----------------------------------------------------\n Commands:\n    store - store a number into the data storage\n    read  - read a number from the data storage\n    quit  - exit the program\n----------------------------------------------------\n   wil has reserved some storage :>\n----------------------------------------------------\n");
    while (1)
    {
        printf("Input command: ");
        status = 1;
        fgets(command, 20, stdin);
        strlen(command);
        command[strlen(command) - 1] = '\0';            // -1 for newline character
        if (strncmp("store", command, 0x5) == 0)
            status = store_number(arr);
        else if (strncmp("read", command, 0x4) == 0)
            status = read_number(arr);
        else if (strncmp("quit", command, 0x4) == 0)
            return (0);
        if (status == 0)
        {
            printf(" Completed %s command successfully\n", command);
            bzero(command, sizeof(command));
        }
        else
        {
            printf(" Failed to do %s command\n", command);
            bzero(command, sizeof(command));
        }
    }
    return (0);
}
